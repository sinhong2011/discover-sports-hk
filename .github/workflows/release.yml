name: Release

on:
  push:
    tags: ['v*']

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.18
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Run tests
        run: bun test
      
      - name: Type check
        run: bun run type-check
      
      - name: Lint & Format check
        run: bun run check

  build-and-submit:
    name: Build & Submit to Stores
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.18
      
      - name: Setup Expo
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
      
      - name: Install dependencies
        run: bun install --frozen-lockfile
      
      - name: Extract and compile i18n
        run: bun run i18n:extract-compile
      
      - name: Build production
        run: eas build --platform all --profile production --non-interactive --wait
        env:
          EAS_BUILD_NUMBER: ${{ github.run_number }}
      
      - name: Submit to stores
        run: eas submit --platform all --profile production --non-interactive
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta')

  create-github-release:
    name: Create GitHub Release
    needs: [test, build-and-submit]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
